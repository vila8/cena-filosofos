/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fciencias.concurrente.practica05.graficos;

import fciencias.concurrente.practica05.Filosofo;
import fciencias.concurrente.practica05.Palillo;
import java.awt.Color;
import java.awt.Graphics;

/**
 * Clase que maneja la interfaz de la mesa
 * @author Jes&uacute;s Vila S&aacute;nchez, 309280970
 */
public class Mesa extends javax.swing.JPanel {
    
    Filosofo [] filosofos;
    Palillo [] palillos;
    private int numFilosofos;

    /**
     * Creates new form FondoFilosofos
     */
    public Mesa() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    protected void paintComponent(Graphics grphcs) {
        super.paintComponent(grphcs); //To change body of generated methods, choose Tools | Templates.
        grphcs.setColor(Color.ORANGE);
        grphcs.fillOval(110, 110, 140, 140);
        for (int i = 0; i < numFilosofos; i++) {
            palillos[i].draw(grphcs);
            filosofos[i].draw(grphcs);
        }
    }

    public void setNumFilosofos(int numFilosofos) {
        this.numFilosofos = numFilosofos;
    }
    
    public void iniciar() {
        filosofos = new Filosofo[numFilosofos];
        palillos = new Palillo[numFilosofos];
        int CANVAS_SIZE = 360;
        for (int i = 0; i < numFilosofos; i++) {
            double angle = Math.PI/2 + 2*Math.PI/numFilosofos*(i-0.5);
            palillos[i] = new Palillo(i,
                    (int)(CANVAS_SIZE/2.0 + CANVAS_SIZE/6.0 * Math.sin(angle)),
                    (int)(CANVAS_SIZE/2.0 - CANVAS_SIZE/6.0 * Math.cos(angle)),
                    this);
        }
        for (int i = 0; i < numFilosofos; i++) {
            boolean diestro = i % 3 == 0 && i != numFilosofos-1;
            double angle = Math.PI/2 + 2*Math.PI/numFilosofos*i;
            filosofos[i] = new Filosofo(i, palillos[i],
                    palillos[(i+1)%numFilosofos], diestro,
                    (int) (CANVAS_SIZE/2.0 + CANVAS_SIZE/3.0 * Math.sin(angle)),
                    (int) (CANVAS_SIZE/2.0 - CANVAS_SIZE/3.0 * Math.cos(angle)),
                    this);
            filosofos[i].start();
        }
    }
    
    public void detener() {
        for (Filosofo filosofo : filosofos) {
            filosofo.stop();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
